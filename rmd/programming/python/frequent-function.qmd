---
title: "常用方法"
jupyter: python3
---


## 分组排序

```{python}
import pandas as pd
df = pd.DataFrame({'Sp':['a','b','c','d','e','f'], 'Mt':['s1', 's1', 's2','s2','s2','s3'], 'Value':[1,2,3,4,5,6], 'Count':[3,2,5,10,10,6]})
df
```


```{python}
df.sort_values('Count', ascending=False).groupby('Mt', as_index=False).first()
```


## 同一个组进行合并

```{python}
series = df.groupby(by='Mt',as_index=True).apply(lambda p:[','.join(p['Sp'])])
df_result = pd.DataFrame({'Mt':series.index, 'Sp': series.values})
df_result
```


## 时间处理

- **dateutil** 

```{python}
import datetime
from dateutil import rrule
today = datetime.date.today()
oneday = datetime.date(2017,10 ,17)
years = rrule.rrule(rrule.YEARLY, dtstart=oneday, until=today).count()
months = rrule.rrule(rrule.MONTHLY, dtstart=oneday, until=today).count()
days = rrule.rrule(rrule.DAILY, dtstart=oneday, until=today).count()
print(years)
print(months)
print(days)
```

- **pandas** 

```{python}
import pandas as pd 
import datetime , time
now = datetime.datetime.now()
ago = now - pd.tseries.offsets.DateOffset(months = 4)
print(ago)
```


- **time**

计算机使用时间戳和**struct_time**数组两种方式表示时间

```{python}
import time
print(time.localtime(time.time()))
```

格式字符串中可以使用的日期和时间符号如下:

+ %y 两位数的年份表示（00-99）;

+ %Y 四位数的年份表示 （000 - 9999）;

+ %m 月份（01-12）;

+ %d 月内中一天（0-31）;

+ %H 24小时制小时数（0-23）;

+ %I 12小时制小时数（01-12）;

+ %M 分钟数（00~59）;

+ %j 年内的一天;

+ %U 一年中的星期数（00~53），星期天为星期的开始;

+ %w 星期（0~6），星期天为星期的开始;

+ %W 一年中的星期数（00~53），星期一位星期的开始.

##  jupyter note 展示表格

```{python}
import pandas as pd
from IPython.core.interactiveshell import InteractiveShell
InteractiveShell.ast_node_interactivity = "all"

```


```HTML
%%HTML
<style type="text/css">
table.dataframe td, table.dataframe th {
    border: 1px  black solid !important;
  color: black !important;
}
</style>
```


## 编辑器显示问题


- 打印非科学计数

```{python}
pd.set_option('display.float_format',lambda x : '%.2f' % x)
```


## 参考

[pandarallel](https://github.com/nalepae/pandarallel)

[paratext](https://github.com/wiseio/paratext)

[Python 数据分析](https://seancheney.gitbook.io/python-for-data-analysis-2nd/)

[颜色色卡](https://www.colorhexa.com/)

[读取 druid](https://github.com/druid-io/pydruid)